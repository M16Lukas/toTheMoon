<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.theMoon.moon.dao.CommunityMapper">

<!-- コメント登録 -->
<insert id="insertContent" parameterType="community">
	insert into
		community(
			content_nm
			,symbol
			,email
			,content
	) values (
		community_nm_seq.nextval
		,#{symbol}
		,#{email}
		,#{content,jdbcType=CLOB}
	) 
</insert>

<!-- 検索した株式のコメント出力　-->
<resultMap type="hashmap" id="getContentList">
	<result property="CONTENT" column="content" jdbcType="CLOB" javaType="java.lang.String"/>
</resultMap>
<select id="printContent" parameterType="String" resultType="hashmap" resultMap="getContentList">
select
	c.content_nm 										as content_nm
	,c.symbol 											as symbol
	,c.email 											as email
	,c.content 											as content
	,c.content_up 										as content_up
	,c.content_down 									as content_down
	,to_char(c.content_indate, 'YYYY-MM-DD HH24:MI:SS') as content_indate
	,(select count(reply_nm) from reply_tb where content_nm = c.content_nm) as reply_cnt
from
	community c
where
	symbol = #{symbol}
order by
	c.content_indate desc
</select>

<!-- コメント修正 -->
<update id="modifyContent" parameterType="community">
update
	community
set
	content = #{content}
where
	symbol = #{symbol}
and
	email = #{email}
and
	content_nm = #{content_nm}
</update>

<!-- コメント削除 -->
<delete id="removeContent" parameterType="community">
delete from
	community
where
	content_nm = #{content_nm}
and
	symbol = #{symbol}
and
	email = #{email}
</delete>

<!-- コメントの推薦ヒストリー確認 -->
<select id="checkContentLikeHistory" resultType="hashmap" parameterType="community">
select
	check_like
	,check_dislike
from
	community_like_history_tb
where
	content_nm = #{content_nm}
and
	email = #{email}
</select>

<!-- ヒストリーに推薦履歴追加 -->
<insert id="insertContentLikeHistory" parameterType="community">
insert into community_like_history_tb
	(content_nm, email, check_like)
values
	(#{content_nm}, #{email}, 'Y')
</insert>

<!-- 推薦ヒストリーアップデート -->
<update id="updateContentLikeHistory" parameterType="community">
update
	community_like_history_tb
set
	check_like = 'Y'
where
	content_nm = #{content_nm}
and
	email = #{email}
</update>

<!-- [そう思う]ボタン -->
<update id="contentUp" parameterType="community">
update
	community
set
	content_up = content_up + 1
where
	symbol = #{symbol}
and
	content_nm = #{content_nm}
</update>

<!-- ヒストリーに非推薦履歴追加 -->
<insert id="insertContentDisLikeHistory" parameterType="community">
insert into community_like_history_tb
	(content_nm, email, check_dislike)
values
	(#{content_nm}, #{email}, 'Y')
</insert>

<!-- 非推薦ヒストリーアップデート -->
<update id="updateContentDisLikeHistory" parameterType="community">
update
	community_like_history_tb
set
	check_dislike = 'Y'
where
	content_nm = #{content_nm}
and
	email = #{email}
</update>

<!-- [そう思わない]ボタン -->
<update id="contentDown" parameterType="community">
update
	community
set
	content_down = content_down + 1
where
	symbol = #{symbol}
and
	content_nm = #{content_nm}
</update>
</mapper>
